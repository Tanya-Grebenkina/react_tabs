{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","isSelectedTab","find","tab","id","className","map","classNames","href","onClick","handleSelect","title","content","tabsFromServer","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAgBH,EAAKI,MAAK,SAAAC,GAAG,OAAIH,IAAkBG,EAAIC,OAC1DN,EAAK,GAQR,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACE,UAAQ,MAERE,UAAWE,IAAW,CACpB,YAAaJ,EAAIC,KAAOH,EAAcG,KAJ1C,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,YArBF,SAACN,GAChBH,IAAkBG,EAAIC,IACxBL,EAAcI,GAoBFO,CAAaP,IAJjB,SAOGA,EAAIQ,SAZFR,EAAIC,WAmBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAcW,cC3CVC,EAAiB,CAC5B,CAAET,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BE,EAAgB,WAC3B,MAAsCC,mBAASF,EAAe,IAA9D,mBAAOG,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,EAAYL,SAGlC,cAAC,EAAD,CACEb,KAAMe,EACNb,cAAegB,EAAYZ,GAC3BL,cAbe,SAACI,GACpBc,EAAed,UCdnBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.88d6e2cd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  onTabSelected: (tab: Tab) => void;\n  selectedTabId: string;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabSelected,\n  selectedTabId,\n}) => {\n  const isSelectedTab = tabs.find(tab => selectedTabId === tab.id)\n  || tabs[0];\n\n  const handleSelect = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={classNames({\n                'is-active': tab.id === isSelectedTab.id,\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  handleSelect(tab);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {isSelectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabsFromServer = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabsFromServer[0]);\n\n  const selectNewTab = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabsFromServer}\n        selectedTabId={selectedTab.id}\n        onTabSelected={selectNewTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}